<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
  http://www.springframework.org/schema/util
  http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="applicationContext-activemq.xml"/>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:config.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.net.SocketAddress">
                    <bean class="org.apache.mina.integration.spring.InetSocketAddressEditor"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="ioAcceptor"
          class="org.apache.mina.integration.spring.IoAcceptorFactoryBean">
        <property name="target">
            <bean class="org.apache.mina.transport.socket.nio.SocketAcceptor" />
        </property>
        <property name="bindings">
            <list>
                <bean class="org.apache.mina.integration.spring.Binding">
                    <property name="address" value="${serverPort}"/>
                    <property name="handler" ref="serviceHandler"/>
                    <property name="serviceConfig">
                        <bean class="org.apache.mina.transport.socket.nio.SocketAcceptorConfig">
                            <property name="filterChainBuilder" ref="filterChainBuilder"/>
                            <property name="threadModel">
                                <util:constant static-field="org.apache.mina.common.ThreadModel.MANUAL"/>
                            </property>
                            <property name="reuseAddress" value="true"/>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>


    <bean id="filterChainBuilder"
          class="org.apache.mina.integration.spring.DefaultIoFilterChainBuilderFactoryBean">
        <property name="filters">
            <list>
                <!--增加线程池处理-->
                <ref bean="serverExecutorFilter"/>
                <ref bean="protocolCodecFilter"/>
                <ref bean="serverCommandFilter"/>
                <ref bean="verificationFilter"/>
                <ref bean="compressionFilter"/>
                <ref bean="xmlBeanBindingFilter"/>
            </list>
        </property>
    </bean>

    <bean id="serverExecutorFilter"
          class="org.apache.mina.filter.executor.ExecutorFilter">
        <constructor-arg type="java.util.concurrent.Executor">
            <ref local="serverExecutorService"/>
        </constructor-arg>
    </bean>

    <bean id="serverExecutorService"
          class="java.util.concurrent.ThreadPoolExecutor"
          destroy-method="shutdown">
        <!--最小线程数量-->
        <constructor-arg index="0" type="int" value="100"/>
        <!--最大线程数量-->
        <constructor-arg index="1" type="int" value="1000"/>
        <!--keepAliveTime-->
        <constructor-arg index="2" type="long" value="60"/>
        <!--时间单位-->
        <constructor-arg index="3" type="java.util.concurrent.TimeUnit"
                         value="SECONDS"/>
        <!--队列-->
        <constructor-arg index="4" type="java.util.concurrent.BlockingQueue">
            <bean class="java.util.concurrent.ArrayBlockingQueue">
                <!--内存中任务队列容量，此容量需要大于最大线程数，但不宜过大 -->
                <constructor-arg index="0" type="int" value="4000"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="protocolCodecFilter"
          class="org.apache.mina.filter.codec.ProtocolCodecFilter">
        <constructor-arg index="0">
             <bean class="org.apache.mina.filter.codec.textline.TextLineCodecFactory"/>
        </constructor-arg>
    </bean>
    <!--解析命令-->
    <bean id="serverCommandFilter"
          class="com.zl.mina.filter.CommandFilter">
    </bean>
    <!--解密-->
    <bean id="cryptographyFilter"
          class="com.zl.mina.filter.CryptographyFilter"/>
    <bean id="verificationFilter"
          class="com.zl.mina.filter.VerificationFilter"/>
    <!--压缩及编码-->
    <bean id="compressionFilter"
          class="com.zl.mina.filter.CompressionFilter">
    </bean>
    <!--XMl与Java Bean绑定-->
    <bean id="xmlBeanBindingFilter"
          class="com.zl.mina.filter.XmlBeanBindingFilter">
    </bean>

    <bean id="serviceHandler"
          class="com.zl.mina.controller.ServerHandler">
    </bean>
    <!--JMX支持-->
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <!--管理的bean-->
            <map>
                <entry key="communicationServer:name=ioHandler">
                    <ref local="serviceHandler"/>
                </entry>
            </map>
        </property>
        <property name="server">
            <ref bean="mbeanServer"/>
        </property>
    </bean>

    <!--服务管理器-->
    <bean id="mbeanServer"
          class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
    </bean>

</beans>